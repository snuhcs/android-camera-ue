<?xml version="1.0" encoding="utf-8"?>
<!--ARToolKit plugin additions-->
<root xmlns:android="http://schemas.android.com/apk/res/android">
	<!-- init section is always evaluated once per architecture -->
	<init>
		<log text="AndroidCamera init"/>
	</init>
	
	<androidManifestUpdates>
		<addPermission android:name="android.permission.CAMERA"/>
		<addFeature android:name="android.hardware.camera"/>
		<addFeature android:name="android.hardware.camera.autofocus"/>
	</androidManifestUpdates>

  <prebuildCopies> 
    <copyDir src="$S(PluginDir)/Java" dst="$S(BuildDir)/src/com/dostos" /> 
  </prebuildCopies>

	<!-- optional additions to the GameActivity imports in GameActivity.java -->
	<gameActivityImportAdditions>
		<insert>
      
			import android.media.Image;
			import android.media.ImageReader;
      import android.util.Size;
      import com.dostos.CameraConnectionFragment;
    </insert>
	</gameActivityImportAdditions>
	
	<gameActivityClassAdditions>
		<insert>
      public native boolean nativeGetFrameData(
      		ByteBuffer y, int row_stride_y, int pixel_stride_y,
					ByteBuffer u, int row_stride_u, int pixel_stride_u,
					ByteBuffer v, int row_stride_v, int pixel_stride_v,
					int width, int height);
			
      CameraConnectionFragment cameraConnectionFragment = null;

      public void AndroidThunkJava_startCamera(int desiredPreviewWidth, int desiredPreviewHeight)
      {
		  cameraConnectionFragment = CameraConnectionFragment.newInstance(
				  new CameraConnectionFragment.ConnectionCallback() {
					  @Override
					  public void onPreviewSizeChosen(Size size, int cameraRotation) {

					  }
				  },
				  new ImageReader.OnImageAvailableListener() {
					  @Override
					  public void onImageAvailable(ImageReader imageReader) {
						Image image = imageReader.acquireLatestImage();
					  	final Image.Plane[] planes = image.getPlanes();
						nativeGetFrameData(
								planes[0].getBuffer(), planes[0].getRowStride(), planes[0].getPixelStride(),
								planes[1].getBuffer(), planes[1].getRowStride(), planes[1].getPixelStride(),
								planes[2].getBuffer(), planes[2].getRowStride(), planes[2].getPixelStride(),
								image.getWidth(), image.getHeight()
						);
            image.close();
					  }
				  }, new Size(desiredPreviewWidth, desiredPreviewHeight)

		  );

		  getFragmentManager().beginTransaction().attach(cameraConnectionFragment).commit();
      };

      public void AndroidThunkJava_stopCamera()
      {
      	if (cameraConnectionFragment != null) {
          getFragmentManager().beginTransaction().remove(cameraConnectionFragment).commit();
          cameraConnectionFragment = null;
		    }
      }
    </insert>
	</gameActivityClassAdditions>

	<!-- optional additions to GameActivity onCreate in GameActivity.java -->
	<gameActivityOnCreateAdditions>
		<insert>
		</insert>
	</gameActivityOnCreateAdditions>

</root>